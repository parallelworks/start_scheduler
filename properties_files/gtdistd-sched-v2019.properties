################################################################################
#                                                                              #
#             I M P O R T A N T:   DO NOT EDIT THIS FILE DIRECTLY!             #
#                                                                              #
#      It's a sample file that may change every time GT-SUITE is updated.      #
#     Please make a copy of this file outside of the installtion directory     #
#          and apply all your changes in that instance of the file.            #
#                                                                              #
################################################################################

#
#                    CONFIGURATION FOR DISTRIBUTED SCHEDULER
#                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# FILE AND DIRECTORY PATHS...
#         On Windows use either forward slashes or _double_ back slashes as
#         separators within paths. We recommend to apply forward slashes
#         regardless of the operating system

# VARIABLE SUBSTITUTION...
#         Any property value or a part thereof may include a reference to
#         another property or an operating system environment variable
#         using "${property-or-variable-name}" syntax. Mind the capitalization!

# Working directory. Choose a local file system with enough space. This location
# will be used to store job resources and execution node state. This directory
# MUST EXIST when application is started.
GTDistributed.work-dir                                  =

# Port listening for connections from the clients (i.e. GT-ISE).
GTDistributed.client.port                               = 8970

# Port listening for connections from the executors.
GTDistributed.server.port                               = 8971

# Whether to activate a built-in web server providing scheduler status
# information. Connect in web browser using the format hostname:port
GTDistributed.web.enable                                = true

# Port number for the web server.
GTDistributed.web.port                                  = 8979

# Whether to allow GT-ISE older than v2017 to connect to this scheduler.
# If true, v2016, v7.5 and earlier can submit jobs to this scheduler.
# If false, only jobs from v2017 and later will be accepted.
GTDistributed.legacy.enable                             = true

# Port number for connection of v2016 and earlier to 2nd generation distributed.
# This needs to be entered in GT-ISE clients v2016, v7.5 and earlier.
GTDistributed.legacy.port                               = 3491

# Optional custom pre-processing script executed before the multicollector.
GTDistributed.multic.user-preproc-script                =

# Optional custom post-processing script executed after the multicollector.
GTDistributed.multic.user-postproc-script               =

################################################################################
#                         OPTIONAL SETTINGS OF INTEREST                        #
################################################################################
# Default values below are commented out. They should be good in most
# circumstances.

# Number of scheduler worker threads used for long-running tasks.
# Default = 10.
# Note that this number has NO direct relation to number of cores on the
# scheduler machine. The thread count should be higher as the cluster size
# (number of cores running GT jobs) increases.
#GTDistributed.scheduler.thread-count                    = 10

# Maximum total number of cores that can be used by the whole system.
# Default = -1 (< 0 = don't check; 0 = inhibit executions).
# For runs using the parallel solver, the number of cores used will exceed the
# number of licenses used.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cores                       = -1

# Maximum number of cores that can be used by a single user.
# Default = -1 (< 0 = don't check; 0 = inhibit executions).
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cores-per-user              = -1

# Maximum number of cores that can be used by a single simulation.
# Default = -1 (< 0 = don't check; 0 = inhibit executions).
# Users can override this value for a given job during submission, subject to
# max-cores-per-batch-limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cores-per-batch             = -1

# Maximum valid value of scheduler.max-cores-per-batch job property.
# If you modify this value, you should set a value other than -1 for
# max-cores-per-batch.
# Default = 10000 (must be greater than 0).
# Users can override the max cores for a given job during submission.
# It will be compared to this limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cores-per-batch-limit       = 10000

# Maximum total number of licenses that can be checked out by this scheduler.
# Default = -1 (< 0 = don't check; 0 = inhibit executions).
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-licenses                    = -1

# Maximum number of licenses that can be checked out by a single user.
# Default = -1 (< 0 = don't check; 0 = inhibit executions).
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-licenses-per-user           = -1

# Maximum number of licenses that can be checked out by a single simulation.
# Default = -1. (< 0 = don't check; 0 = inhibit executions).
# Users can override this value for a given job during submission, subject to
# max-licenses-per-batch-limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-licenses-per-batch          = -1

# Maximum valid value of scheduler.max-licenses-per-batch job property.
# If you modify this value, you should set a value other than -1 for
# max-licenses-per-batch.
# Default = 10000 (must be greater than 0).
# Users can override number of licenses for a given job during submission.
# It will be compared to this limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-licenses-per-batch-limit    = 10000

# Default minimum number of cases to include in a packet.
# Default = -1 (< 0 = don't check; 0 = invalid;
#     must be no greater than min-cases-per-packet-limit).
# Users can override this value for a given job during submission subject to
# min-cases-per-packet-limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.min-cases-per-packet            = -1

# Maximum valid value of min-cases-per-packet.
# If you modify this value, you should set a value other than -1 for
# min-cases-per-packet.
# Default = 10000 (must be greater than 0).
# Users can set a value of min cases per packet during submission.
# It will be compared to this limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.min-cases-per-packet-limit      = 10000

# Default maximum number of cases to include in a packet.
# Default = -1 (< 0 = don't check; 0 = invalid;
#     must be no greater than max-cases-per-packet-limit).
# Users can override this value for a given job during submission subject to
# max-cases-per-packet-limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cases-per-packet            = -1

# Maximum valid value of max-cases-per-packet.
# If you modify this value, you should set a value other than -1 for
# max-cases-per-packet-limit.
# Default = 10000 (must be greater than 0).
# Users can set a value of max cases per packet during submission. It will be
# compared to this limit.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-cases-per-packet-limit      = 10000

# Minimum effective number of cores in the system to use when splitting cases.
# Default = 10 (< 0 = don't check; 0 = invalid;
#     must be no greater than max-effective-cores).
# If the actual number of available cores falls below this limit, the scheduler
# uses this value to calculate case splits.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.min-effective-cores             = 10

# Maximum effective number of cores in the system to use when splitting cases.
# Default = 10000 (< 0 = don't check; 0 = invalid;
#     must be no less than min-effective).
# If the actual number of available cores exceeds this limit, the scheduler uses
# this value to calculate case splits.
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-effective-cores             = 10000

# Maximum total number of running multicollector jobs.
# Default = 8 (< 0 = don't check; 0 = inhibit executions).
# This property may be changed without restarting the server.
#GTDistributed.scheduler.max-postproc                    = 8

# Scheduler strategy.
# The only available strategy at this time is "fifo-strategy".
#GTDistributed.scheduler.strategy                        = fifo-strategy

################################################################################
#                         CONNECTION FILTERS (ACCESS CONTROL)                  #
################################################################################
# Rules should be of the form "[+|-][ip|host][\cidr (optional)]" and be
# separated by the ";" character. The leading "+" or "-" character indicates
# whether it is a whitelist rule or a blacklist rule. Next is either a host
# name, or an IP address with optional CIDR designation for subnet.
#
# If this is property is left blank, all connections will be accepted. However,
# if any rules are defined, then any connection not explicitly allowed will be
# rejected.
#
# An address will be accepted if and only if both of the following are true:
#   1) There is at least one whitelist rule that matches the address
#   2) There are no blacklist rules that match the address
#
# For example "+192.168.100.0/24;-192.168.100.128;-badhost.example.com" will
# accept connections only from IPs in the range 192.168.100.0 to
# 192.168.100.255, with the exception of 192.168.100.128, which will be
# rejected. In addition any connection from -badhost.example.com will also be
# rejected. This allows whitelisting of an entire subnet, and then disabling
# specific hosts via ip or name.
#
# While rules may be created using host names, we recommend using ip address
# / subnet rules wherever feasible for the following reason: if a connection filter
# fails to resolve while the scheduler is running, the entire set of filters
# is considered invalid. This will cause the scheduler to refuse all connections
# the rule would otherwise apply to while the host name cannot be resolved.
#
# This property may be changed without restarting the server, but will only
# affect new connections to the server. Existing connections will be unaffected.
# To affect existing connections, the server must be restarted.

# List of filters for incoming connections from the clients.
#GTDistributed.client.ip-filter                          = +0.0.0.0/0

# List of filters for incoming connections from the executors.
#GTDistributed.server.ip-filter                          = +0.0.0.0/0

################################################################################
#                              LOGGING CONFIGURATION                           #
################################################################################
# Default values below are commented out. They should be good in most
# circumstances.

# Logging directory. By default it's relative to the working directory defined
# in the beginning of this file. If this directory doesn't exist at the startup,
# it'll be created automatically.
#GTDistributed.log-dir                                   = ${GTDistributed.work-dir}/log

# Base name of the log file. A sequence number will be added at the end.
#GTDistributed.log-file-base                             = gtdistd.log

# Maximum size, in bytes, of a log file before it's rotated.
java.util.logging.FileHandler.limit                     = 30000000

# How many log files to keep.
java.util.logging.FileHandler.count                     = 30

# Logger threshold levels.
# Valid values: OFF, FINEST, FINER, FINE, CONFIG, INFO, WARNING, SEVERE, ALL.
#com.gtisoft.distd.level                                 = INFO
#com.gtisoft.distd.network.log.level                     = WARNING

################################################################################
#                                 REPORTING                                    #
################################################################################
# Optional reporting functionality.

# The job summary service is a feature which outputs a summary of job attributes
# to a csv file upon a job finishing.

# The information recorded corresponds to the following attributes:
# |Job-ID|Owner|Client|Version|Model Name|Priority|Creation Time|Finish Time|
# |Total Time (secs)|Status|# Packets|# Cases|# Completed Cases|# Skipped Cases|

# Whether the job summary service is enabled.
GTDistributed.job-summary-service-enable               = false

# Time Duration in hours before the job summary service rolls over to a new file.
# Default is 168 hours = 1 week.
# GTDistributed.job-summary-rollover-duration            = 168

# Number of jobs to record before the job summary service rolls over to a new file.
# GTDistributed.job-summary-rollover-lines               = 100000

# Maximum number of job summary files to keep in the directory before deleting the
# oldest one.
# GTDistributed.job-summary-max-files                    = 10

# Base name of the job summary files. A timestamp number will be added in addition
# to a .csv extension. Ex: completed_jobs_20180711135215.csv
# GTDistributed.job-summary-file-base                    = completed_jobs_

# Directory to store job summary files. By default it's relative to the working
# directory defined in the beginning of this file. If this directory doesn't exist
# at the startup, it'll be created automatically.
# GTDistributed.job-summary-directory                    = ${GTDistributed.work-dir}/reports


# Modifications by NK - 07/07/2020
GTDistributed.scheduler.thread-count                    = 40
GTDistributed.transaction-log-directory                 = /var/opt/gtsuite/gtdistd/state

################################################################################
#                    PROPERTIES BELOW MOST NOT BE CHANGED                      #
################################################################################
GTDistributed.job-contexts                              = scheduler
GTDistributed.server.connector                          = rpc-acceptor
GTDistributed.client.connector                          = rpc-acceptor
GTDistributed.client.call-retry-time                    = 0
GTDistributed.client.call-retry-time-max                = 0

### END OF FILE
